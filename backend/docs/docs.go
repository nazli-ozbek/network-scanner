// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/clear": {
            "delete": {
                "description": "Deletes all devices from in-memory store",
                "summary": "Clear all stored devices (DEV ONLY)",
                "responses": {
                    "200": {
                        "description": "Devices cleared",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/devices": {
            "get": {
                "description": "Returns the list of scanned devices",
                "produces": [
                    "application/json"
                ],
                "summary": "Get all discovered devices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Device"
                            }
                        }
                    }
                }
            }
        },
        "/scan": {
            "post": {
                "description": "Starts scanning the given CIDR range in the background",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Initiate a network scan",
                "parameters": [
                    {
                        "description": "IP range to scan",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ScanRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ScanRequest": {
            "type": "object",
            "properties": {
                "ip_range": {
                    "type": "string"
                }
            }
        },
        "model.Device": {
            "type": "object",
            "properties": {
                "hostname": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "is_online": {
                    "type": "boolean"
                },
                "last_seen": {
                    "type": "string"
                },
                "mac_address": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "Network Scanner API",
	Description:      "REST API to initiate a network scan and fetch discovered devices",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
